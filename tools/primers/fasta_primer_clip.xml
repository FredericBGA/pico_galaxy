<tool id="fastq_primer_clip" name="FASTA primer clip" version="0.0.1">
    <description>Trim off 5' or 3' primers</description>
	<command interpreter="python">
fasta_primer_clip.py $input_fasta $primer_fasta $primer_type $mm $min_len $keep_negatives $output_fasta
    </command>
	<inputs>
		<param name="input_fasta" type="data" format="fasta" label="FASTA file to clip"/>
		<param name="primer_fasta" type="data" format="fasta" label="FASTA file containing primer(s)"/>
        <param name="primer_type" type="select" label="Type of primers">
            <option value="Forward">Forward (5') primers</option>
            <option value="Reverse">Reverse (3') primers (given with respect to the forward strand)</option>
            <option value="Reverse-complement">Reverse (3') primers (given with respect to the reverse strand)</option>
        </param>
        <param name="mm" type="integer" value="0" label="How many mismatches to allow? (0, 1 or 2)">
	    <validator type="in_range" min="0" max="2" />
	</param>
        <param name="min_len" type="integer" label="Minimum length for clipped reads" value="1"/>
        <param name="keep_negatives" type="boolean" value="false" label="Keep reads with no matched primer"/>
	</inputs>
	<outputs>
	    <data name="output_fasta" format="fasta" label="$primer_type primer clipped">
        </data>
    </outputs>
	<tests>
	</tests>
	<help>

**What it does**

Looks for the given primer sequences and clips the reads to remove the primers and any preceeding/trailing sequence.

Reads containing a forward primer are reduced to just the sequence after (and excluding) the forward primer.
Reads containing a reverse primer are reduced to just the sequence before (and excluding) the reverse primer.

Degenerate primers can be specified using the standard IUPAC ambiguity codes, thus a primer with an N would match A, C, T or G (or any of the IUPAC ambiguity codes) and so on.

	</help>
</tool>
