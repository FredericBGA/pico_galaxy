<tool id="seq_select_by_id" name="Select sequences by ID" version="0.0.4">
	<description>from a tabular file</description>
	<version_command interpreter="python">seq_select_by_id.py --version</version_command>
	<command interpreter="python">
seq_select_by_id.py $input_tabular $column $input_file $input_file.ext $output_file
	</command>
	<inputs>
		<param name="input_file" type="data" format="fasta,qual,fastq,sff" label="Sequence file to select from" help="FASTA, QUAL, FASTQ, or SFF format." />
		<param name="input_tabular" type="data" format="tabular" label="Tabular file containing sequence identifiers"/>
		<param name="column" type="data_column" data_ref="input_tabular" multiple="False" numerical="False" label="Column containing sequence identifiers"/>
	</inputs>
	<outputs>
		<data name="output_file" format="fasta" label="Selected sequences">
			<!-- TODO - Replace this with format="input:input_fastq" if/when that works -->
			<change_format>
				<when input_dataset="input_file" attribute="extension" value="sff" format="sff" />
				<when input_dataset="input_file" attribute="extension" value="fastq" format="fastq" />
				<when input_dataset="input_file" attribute="extension" value="fastqsanger" format="fastqsanger" />
				<when input_dataset="input_file" attribute="extension" value="fastqsolexa" format="fastqsolexa" />
				<when input_dataset="input_file" attribute="extension" value="fastqillumina" format="fastqillumina" />
				<when input_dataset="input_file" attribute="extension" value="fastqcssanger" format="fastqcssanger" />
			</change_format>
		</data>
	</outputs>
	<tests>
	</tests>
	<requirements>
		<requirement type="python-module">Bio</requirement>
	</requirements>
	<help>

**What it does**

Takes a FASTA, QUAL, FASTQ or Standard Flowgram Format (SFF) file and produces a
new sequence file (of the same format) containing only the records with identifiers
in the tabular file (in the order from the tabular file).

WARNING: If you have any duplicates in the tabular file identifiers, you will get
duplicate sequences in the output.

**Citation**

This tool uses Biopython to read, write and index sequence files. If you use
this tool in scientific work leading to a publication, please cite the
Biopython application note (and Galaxy too of course):

Cock et al 2009. Biopython: freely available Python tools for computational
molecular biology and bioinformatics. Bioinformatics 25(11) 1422-3.
http://dx.doi.org/10.1093/bioinformatics/btp163 pmid:19304878.

	</help>
</tool>
